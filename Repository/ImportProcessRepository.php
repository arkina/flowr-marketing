<?php

namespace Flower\MarketingBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Flower\ModelBundle\Entity\Marketing\ImportProcess;

/**
 * ImportProcessRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ImportProcessRepository extends EntityRepository
{

    /**
     * Return the query to list of the actual import in proces for one contract list
     * @author Francisco Memoli <fmemoli@flowcode.com.ar>
     * @date   2015-06-03
     * @param  ContractList     $contractlist The contract list related with the imports in Progress
     * @return query                   The query generated.
     */
    public function findAllImportProgressInProgressBy($contractlist)
    {
        $qb = $this->createQueryBuilder("ip");
        $qb->andWhere('ip.status != ' . ImportProcess::$STATUS_READY);
        $qb->andWhere('ip.contactList = ' . $contractlist->getId());
        return $qb->select("ip as importProcess")->getQuery();
    }

    /**
     * Return the query to count of the actual import in proces for one contract list
     * @author Francisco Memoli <fmemoli@flowcode.com.ar>
     * @date   2015-06-03
     * @param  ContractList     $contractlist The contract list related with the imports in Progress
     * @return query                   The query generated.
     */
    public function countImportProgressInProgressBy($contractlist)
    {
        $qb = $this->createQueryBuilder("ip");
        $qb->andWhere('ip.status != ' . ImportProcess::$STATUS_READY);
        $qb->andWhere('ip.contactList = ' . $contractlist->getId());
        return $qb->select("COUNT(ip)")
                        ->getQuery();
    }

    /**
     * 
     * @param type $contractlist
     * @return type
     */
    public function findByContactList($contractlist)
    {
        $qb = $this->createQueryBuilder("ip");
        $qb->andWhere('ip.contactList = ' . $contractlist->getId());
        $qb->orderBy("ip.updated", "DESC");
        return $qb->getQuery()->getResult();
    }

}
