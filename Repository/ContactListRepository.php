<?php

namespace Flower\MarketingBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr\Join;

/**
 * ContactListRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactListRepository extends EntityRepository
{
    public function getContactsQuery($contactListId)
    {
        $qb = $this->createQueryBuilder("cl");
        $qb->select("c");
        $qb->innerJoin("cl.contacts", "c", Join::WITH, "cl.id = :contact_list_id");
        $qb->where("cl.id = :contact_list_id");
        $qb->setParameter("contact_list_id", $contactListId);

        return $qb->getQuery();
    }

    public function getContacts($contactListId, $offset, $limit)
    {
        $qb = $this->createQueryBuilder("cl");
        $qb->select("c");
        $qb->innerJoin("cl.contacts", "c", Join::WITH, "cl.id = :contact_list_id");
        $qb->where("cl.id = :contact_list_id");
        $qb->setParameter("contact_list_id", $contactListId);

        return $qb->getQuery()->getResult();
    }

    public function getByContactId($contactId)
    {
        $qb = $this->createQueryBuilder("cl");
        $qb->select("cl");
        $qb->innerJoin("cl.contacts", "c", Join::WITH, "c.id = :contact_id");
        $qb->where("c.id = :contact_id");
        $qb->setParameter("contact_id", $contactId);

        return $qb->getQuery()->getResult();
    }

    public function removeContact($contactListId, $contactId)
    {
        $statement = "DELETE FROM contactlists_contacts "
                . "WHERE contactlist_id = :contactlist_id "
                . "AND contact_id = :contact_id ";

        $conn = $this->getEntityManager()->getConnection();
        $stmt = $conn->prepare($statement);
        $stmt->bindParam("contactlist_id", $contactListId);
        $stmt->bindParam("contact_id", $contactId);

        $stmt->execute();

        return true;
    }
}
